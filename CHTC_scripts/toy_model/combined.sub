# toy.sub
# Toy HTCondor submit file
# ALL FILES IN HERE MUST HAVE PATHS TO HOME, NOT IN STAGING

# TODO: Specify the HTCondor Universe (vanilla is the default and is used
#  for almost all jobs) and your desired name of the HTCondor log file,
#  which is where HTCondor will describe what steps it takes to run 
universe = vanilla
log = toy_$(Cluster).log

# TODO: Specify your executable (single binary or a script that runs several
#  commands), arguments, and a files for HTCondor to store standard
#  output (or "screen output").
#  $(Process) will be a integer number for each job, starting with "0"
#  and increasing for the relevant number of jobs.
#  TODO: If you don't want your working directory to be clogged, make your own file output directory
executable = combined.sh
arguments = $(layer_num) $(layer_size)
output = $(Cluster)_$(Process).out
error = $(layer_num)_$(layer_size).err

# Specify that HTCondor should transfer files to and from the
#  computer where each job runs. The last of these lines *would* be
#  used if there were any other files needed for the executable to use.
#  DO NOT USE THIS FOR THE LARGE INPUT FILES, MANAGED IN EXECUTABLE
should_transfer_files = YES
when_to_transfer_output = ON_EXIT

# LIST ABSOLUTE PATH OF ALL THE PYTHON FILES YOU NEED TO HERE TODO
transfer_input_files = /home/hlin324/ProjectX2021/python_scripts/regularized_toy_script.py, /home/hlin324/ProjectX2021/models/regularized_toy_model.py, /home/hlin324/ProjectX2021/data_processing/F2/toy/toy_preprocess.py, /home/hlin324/ProjectX2021/evaluations/toy.py

# TODO: Tell HTCondor what amount of compute resources
request_cpus = 1
request_memory = 4GB
request_disk = 4GB

# DONT CHANGE BUT NEEDED
Requirements = (Target.HasCHTCStaging == true)

# Tell HTCondor to run 1 instances of our job:
queue layer_num,layer_size from INPUTFILE.txt
